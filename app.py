from flask import Flask, render_template, request, redirect, url_for

app = Flask(__name__)

# Данные каталога профессий и описания
professions = {
    "Менеджер по инновациям": {
        "description": "Менеджер, который внедряет инновационные решения и технологии в аграрном секторе.",
        "stories": "Реальная история успеха менеджера по инновациям, который помог внедрить систему агродронов.",
        "salary": "От 70 000 до 120 000 руб.",
        "education_links": [
            {"name": "Техникум инноваций", "url": "https://college-kiu.ru/"},
            {"name": "Колледж технологий", "url": "https://rktm.info/"}
        ]
    },
    "Специалист по агроинформатике": {
        "description": "Анализ больших данных для сельского хозяйства с помощью современных IT-систем.",
        "stories": "История специалиста, который оптимизировал урожайность с помощью анализа данных.",
        "salary": "От 60 000 до 110 000 руб.",
        "education_links": [
            {"name": "Аграрный университет", "url": "https://www.dongau.ru/"}
        ]
    },
    "Инженер точного земледелия": {
        "description": "Работа с дронами, сенсорами и GPS для повышения эффективности сельского хозяйства.",
        "stories": "Инженер точного земледелия внедрил систему мониторинга полей с помощью дронов.",
        "salary": "От 65 000 до 115 000 руб.",
        "education_links": [
            {"name": "Техникум точного земледелия", "url": "https://mtatiu.ru/"}
        ]
    },
    "Агроэколог-реставратор": {
        "description": "Восстановление и сохранение почв, защита природы и экосистем.",
        "stories": "Эколог-реставратор помог восстановить плодородие пострадавших земель.",
        "salary": "От 55 000 до 100 000 руб.",
        "education_links": [
            {"name": "Экологический колледж", "url": "https://spbiem.ru/abitur/spo-kolledzh?utm_source=direkt&utm_medium=reklama&utm_campaign=spo&utm_content=17024967524&utm_term=колледжи%20спб&yclid=16234076506284359679"}
        ]
    },
    "Специалист по вертикальному фермерству": {
        "description": "Организация и управление городскими вертикальными фермами.",
        "stories": "Специалист по вертикальному фермерству создал успешный городской проект выращивания зелени.",
        "salary": "От 50 000 до 90 000 руб.",
        "education_links": [
            {"name": "Колледж агротехнологий", "url": "http://nporopl92.ru/index.php/en/"}
        ]
    },
    "Менеджер агророботизированных систем": {
        "description": "Управление роботизированными системами в сельском хозяйстве.",
        "stories": "Менеджер внедрил роботизированные системы для автоматизации уборки урожая.",
        "salary": "От 70 000 до 130 000 руб.",
        "education_links": [
            {"name": "Техникум робототехники", "url": "https://rgups.ru/university/struktura-i-organy-upravleniia-1632/uchebnye-podrazdeleniia/tekhnikum-rgups-549/"}
        ]
    },
    "Биотехнолог, агробиотехнолог": {
        "description": "Использование биотехнологий для улучшения сельскохозяйственных культур.",
        "stories": "Биотехнолог разработал устойчивые к засухе сорта растений.",
        "salary": "От 60 000 до 110 000 руб.",
        "education_links": [
            {"name": "Биотехнологический колледж", "url": "https://edu.rosbiotech.ru/college/"}
        ]
    },
    "Консультант по устойчивому земледелию": {
        "description": "Консультации по методам устойчивого и экологичного земледелия.",
        "stories": "Консультант помог фермерам перейти на экологичные методы работы.",
        "salary": "От 55 000 до 95 000 руб.",
        "education_links": [
            {"name": "Колледж агроэкологии", "url": "https://insagro.sursau.ru/about/"}
        ]
    },
    "Специалист по агроклиматической адаптации": {
        "description": "Разработка стратегий адаптации сельского хозяйства к климатическим изменениям.",
        "stories": "Специалист разработал программу защиты посевов от засухи и заморозков.",
        "salary": "От 60 000 до 105 000 руб.",
        "education_links": [
            {"name": "Колледж климатологии и агротехники", "url": "https://ргмт.рф/"}
        ]
    }
}


# Вопросы теста и варианты ответов
test_questions = [
    {
        "question": "Что вам больше по душе?",
        "options": [
            "Работа с техникой и цифровыми устройствами",
            "Исследования и эксперименты",
            "Управление процессами и людьми",
            "Защита природы и восстановление экосистем",
            "Работа с животными и растениями"
        ]
    },
    {
        "question": "Какие навыки вам ближе?",
        "options": [
            "Анализ данных, работа с IT-системами",
            "Проектирование и внедрение новых технологий",
            "Организация и планирование",
            "Практические опыты и лабораторные исследования",
            "Работа на открытом воздухе"
        ]
    },
    {
        "question": "Какой формат работы вам интереснее?",
        "options": [
            "В офисе или лаборатории",
            "На производстве или в полях",
            "В команде специалистов",
            "Самостоятельно, с гибким графиком"
        ]
    },
    {
        "question": "Что для вас важнее при выборе профессии?",
        "options": [
            "Высокая востребованность и зарплата",
            "Возможность карьерного роста",
            "Вклад в экологию и устойчивое развитие",
            "Работа с инновациями"
        ]
    },
    {
        "question": "Готовы ли вы учиться новым цифровым и технологическим навыкам?",
        "options": [
            "Да, с интересом",
            "Да, если это необходимо",
            "Скорее нет"
        ]
    }
]

def evaluate_test(answers):
    mapping = {
        0: "Менеджер по инновациям",
        1: "Специалист по агроинформатике",
        2: "Инженер точного земледелия",
        3: "Агроэколог-реставратор",
        4: "Специалист по вертикальному фермерству",
        5: "Менеджер агророботизированных систем",
        6: "Биотехнолог, агробиотехнолог",
        7: "Консультант по устойчивому земледелию",
        8: "Специалист по агроклиматической адаптации"
    }
    # Можно использовать сумму всех ответов для выбора профессии
    index = sum([int(a) for a in answers if a and a.isdigit()]) % len(mapping)
    profession = mapping.get(index, "Менеджер по инновациям")
    return profession


@app.route('/')
def index():
    cluster_info = (
        "В 2026 году в Ростовской области планируется запуск трех новых образовательных кластеров "
        "в сфере среднего профессионального образования (СПО), один из которых будет посвящен сельскому хозяйству. "
        "Этот аграрный кластер создается в рамках федерального проекта «Профессионалитет» и объединит Пролетарский аграрно-технологический техникум "
        "с восемью колледжами и четырьмя предприятиями. Его цель - подготовка кадров, чьи навыки будут востребованы на региональном рынке труда."
        "Кластерная система способствует развитию целевого обучения, когда предприятия заключают договоры с будущими студентами, "
        "гарантируя им последующее трудоустройство. Это снижает риски для молодых специалистов и обеспечивает предприятия квалифицированными кадрами."
    )
    return render_template('index.html', cluster_info=cluster_info)

@app.route('/catalog')
def catalog():
    prof_list = list(professions.keys())
    return render_template('catalog.html', professions=prof_list)

@app.route('/test', methods=['GET', 'POST'])
def test():
    if request.method == 'POST':
        answers = [request.form.get(f'q{i}') for i in range(len(test_questions))]
        profession = evaluate_test(answers)
        return redirect(url_for('result', profession_name=profession))
    return render_template('test.html', questions=test_questions)

@app.route('/result/<profession_name>')
def result(profession_name):
    prof = professions.get(profession_name)
    if not prof:
        return "Профессия не найдена", 404
    return render_template('result.html', profession_name=profession_name, profession=prof)

@app.route('/profession/<profession_name>')
def profession_page(profession_name):
    prof = professions.get(profession_name)
    if not prof:
        return "Профессия не найдена", 404
    return render_template('profession.html', profession_name=profession_name, profession=prof)

if __name__ == '__main__':
    app.run(debug=True)
